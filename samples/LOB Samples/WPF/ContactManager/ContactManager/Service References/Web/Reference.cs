//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4918
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ContactManager.Web {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactDto", Namespace="http://schemas.datacontract.org/2004/07/ContactManager.Web")]
    [System.SerializableAttribute()]
    public partial class ContactDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ContactManager.Web.AddressDto AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<ContactManager.Web.PhoneNumberDto> NumbersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ContactManager.Web.AddressDto Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ContactManager.Web.PhoneNumberDto> Numbers {
            get {
                return this.NumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.NumbersField, value) != true)) {
                    this.NumbersField = value;
                    this.RaisePropertyChanged("Numbers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressDto", Namespace="http://schemas.datacontract.org/2004/07/ContactManager.Web")]
    [System.SerializableAttribute()]
    public partial class AddressDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Street1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Street2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street1 {
            get {
                return this.Street1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Street1Field, value) != true)) {
                    this.Street1Field = value;
                    this.RaisePropertyChanged("Street1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street2 {
            get {
                return this.Street2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Street2Field, value) != true)) {
                    this.Street2Field = value;
                    this.RaisePropertyChanged("Street2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhoneNumberDto", Namespace="http://schemas.datacontract.org/2004/07/ContactManager.Web")]
    [System.SerializableAttribute()]
    public partial class PhoneNumberDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ContactManager.Web.PhoneNumberType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ContactManager.Web.PhoneNumberType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhoneNumberType", Namespace="http://schemas.datacontract.org/2004/07/ContactManager.Web")]
    public enum PhoneNumberType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Home = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cell = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Work = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fax = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Web.IContactService")]
    public interface IContactService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/GetAllContacts", ReplyAction="http://tempuri.org/IContactService/GetAllContactsResponse")]
        System.Collections.ObjectModel.ObservableCollection<ContactManager.Web.ContactDto> GetAllContacts();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/GetAllContacts", ReplyAction="http://tempuri.org/IContactService/GetAllContactsResponse")]
        System.IAsyncResult BeginGetAllContacts(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<ContactManager.Web.ContactDto> EndGetAllContacts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/UpdateContact", ReplyAction="http://tempuri.org/IContactService/UpdateContactResponse")]
        void UpdateContact(ContactManager.Web.ContactDto contact);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/UpdateContact", ReplyAction="http://tempuri.org/IContactService/UpdateContactResponse")]
        System.IAsyncResult BeginUpdateContact(ContactManager.Web.ContactDto contact, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateContact(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IContactServiceChannel : ContactManager.Web.IContactService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetAllContactsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllContactsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ContactManager.Web.ContactDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ContactManager.Web.ContactDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ContactServiceClient : System.ServiceModel.ClientBase<ContactManager.Web.IContactService>, ContactManager.Web.IContactService {
        
        private BeginOperationDelegate onBeginGetAllContactsDelegate;
        
        private EndOperationDelegate onEndGetAllContactsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllContactsCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateContactDelegate;
        
        private EndOperationDelegate onEndUpdateContactDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateContactCompletedDelegate;
        
        public ContactServiceClient() {
        }
        
        public ContactServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ContactServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContactServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContactServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetAllContactsCompletedEventArgs> GetAllContactsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateContactCompleted;
        
        public System.Collections.ObjectModel.ObservableCollection<ContactManager.Web.ContactDto> GetAllContacts() {
            return base.Channel.GetAllContacts();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllContacts(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllContacts(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<ContactManager.Web.ContactDto> EndGetAllContacts(System.IAsyncResult result) {
            return base.Channel.EndGetAllContacts(result);
        }
        
        private System.IAsyncResult OnBeginGetAllContacts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllContacts(callback, asyncState);
        }
        
        private object[] OnEndGetAllContacts(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ContactManager.Web.ContactDto> retVal = this.EndGetAllContacts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllContactsCompleted(object state) {
            if ((this.GetAllContactsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllContactsCompleted(this, new GetAllContactsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllContactsAsync() {
            this.GetAllContactsAsync(null);
        }
        
        public void GetAllContactsAsync(object userState) {
            if ((this.onBeginGetAllContactsDelegate == null)) {
                this.onBeginGetAllContactsDelegate = new BeginOperationDelegate(this.OnBeginGetAllContacts);
            }
            if ((this.onEndGetAllContactsDelegate == null)) {
                this.onEndGetAllContactsDelegate = new EndOperationDelegate(this.OnEndGetAllContacts);
            }
            if ((this.onGetAllContactsCompletedDelegate == null)) {
                this.onGetAllContactsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllContactsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllContactsDelegate, null, this.onEndGetAllContactsDelegate, this.onGetAllContactsCompletedDelegate, userState);
        }
        
        public void UpdateContact(ContactManager.Web.ContactDto contact) {
            base.Channel.UpdateContact(contact);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateContact(ContactManager.Web.ContactDto contact, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateContact(contact, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateContact(System.IAsyncResult result) {
            base.Channel.EndUpdateContact(result);
        }
        
        private System.IAsyncResult OnBeginUpdateContact(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ContactManager.Web.ContactDto contact = ((ContactManager.Web.ContactDto)(inValues[0]));
            return this.BeginUpdateContact(contact, callback, asyncState);
        }
        
        private object[] OnEndUpdateContact(System.IAsyncResult result) {
            this.EndUpdateContact(result);
            return null;
        }
        
        private void OnUpdateContactCompleted(object state) {
            if ((this.UpdateContactCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateContactCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateContactAsync(ContactManager.Web.ContactDto contact) {
            this.UpdateContactAsync(contact, null);
        }
        
        public void UpdateContactAsync(ContactManager.Web.ContactDto contact, object userState) {
            if ((this.onBeginUpdateContactDelegate == null)) {
                this.onBeginUpdateContactDelegate = new BeginOperationDelegate(this.OnBeginUpdateContact);
            }
            if ((this.onEndUpdateContactDelegate == null)) {
                this.onEndUpdateContactDelegate = new EndOperationDelegate(this.OnEndUpdateContact);
            }
            if ((this.onUpdateContactCompletedDelegate == null)) {
                this.onUpdateContactCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateContactCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateContactDelegate, new object[] {
                        contact}, this.onEndUpdateContactDelegate, this.onUpdateContactCompletedDelegate, userState);
        }
    }
}
